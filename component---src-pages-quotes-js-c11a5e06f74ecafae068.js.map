{"version":3,"sources":["webpack:///./src/pages/quotes.js","webpack:///./src/styles/quotes-list.module.css","webpack:///./src/components/share-button.js","webpack:///./src/components/quote-image.js","webpack:///./src/styles/share-button.module.css","webpack:///./src/components/quotes-list.js"],"names":["location","data","title","heading","className","quotes","allMarkdownRemark","nodes","query","module","exports","shareUrl","style","absoluteShareUrl","useAbsoluteUrl","classNames","styles","button","onClick","e","preventDefault","stopPropagation","window","open","encodeURIComponent","size","quote","onLoad","image","childImageSharp","background","placeholder","backgroundColor","backgroundImage","patternFile","publicURL","backgroundRepeat","backgroundSize","opacity","map","key","fields","slug","to","text","excerpt","share"],"mappings":"6FAAA,0GASe,0BAAGA,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACb,kBAAC,IAAD,CACED,SAAUA,EACVE,MAAM,SACNC,QACE,kBAAC,IAAD,CAAQC,UAPW,2BAQjB,kBAAC,IAAD,iBAIJ,kBAAC,IAAD,CAAQA,UAZa,2BAanB,kBAAC,IAAD,CAAYC,OAAQJ,EAAKK,kBAAkBC,WAK1C,IAAMC,EAAK,a,uBCxBlBC,EAAOC,QAAU,CAAC,OAAS,oCAAoC,MAAQ,mCAAmC,KAAO,kCAAkC,MAAQ,qC,oCCD3J,2FAOe,gBAAqC,IAAlCC,EAAiC,EAAjCA,SAAUP,EAAuB,EAAvBA,UAAWQ,EAAY,EAAZA,MAC/BC,EAAmBC,YAAeH,GAExC,OACE,4BACEP,UAAWW,IAAW,eAAgBC,IAAOC,OAAQb,GACrDc,QAAS,SAAAC,GACPA,EAAEC,iBACFD,EAAEE,kBACFC,OAAOC,KACL,gDACED,OAAOE,mBAAmBX,GAC5B,MACA,yCAGJD,MAAOA,GAEP,kBAAC,IAAD,CAASa,KAAK,Y,kCCzBpB,8CAGe,oBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACbD,EAAME,MACJ,kBAAC,IAAD,eACExB,UAAU,QACVuB,OAAQA,GACJD,EAAME,MAAMC,kBAKlB,yBACEzB,UAAU,QACVQ,MAAO,CACLkB,WAAYJ,EAAMK,YAAYC,kBAGhC,yBACE5B,UAAU,cACVQ,MAAO,CACLqB,gBAAgB,OACPP,EAAMK,YAAYG,YAAYC,UADxB,IAEfC,iBAAkB,SAClBC,eAAgB,QAChBC,QAAS,S,qBCzBnB7B,EAAOC,QAAU,CAAC,OAAS,uC,oCCD3B,kFAOe,oBAAGL,EAAH,EAAGA,OAAH,OACb,yBAAKD,UAAWY,IAAOX,QACpBA,EAAOkC,KAAI,SAAAb,GAAK,OACf,kBAAC,IAAD,CACEc,IAAKd,EAAMe,OAAOC,KAClBC,GAAIjB,EAAMe,OAAOC,MAEjB,yBAAKtC,UAAWY,IAAOY,OACrB,kBAAC,IAAD,CAAYF,MAAOA,KAErB,yBAAKtB,UAAWY,IAAO4B,MACrB,8BACGlB,EAAMmB,UAGX,kBAAC,IAAD,CACElC,SAAUe,EAAMe,OAAOC,KACvBtC,UAAWY,IAAO8B","file":"component---src-pages-quotes-js-c11a5e06f74ecafae068.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Page from '../components/page';\nimport { Heading, Column } from '../components/layout';\nimport QuotesList from '../components/quotes-list';\n\nconst COLUMN_CLASSNAME = 'col-12 col-lg-8 mx-auto';\n\nexport default ({ location, data }) => (\n  <Page\n    location={location}\n    title=\"Quotes\"\n    heading={\n      <Column className={COLUMN_CLASSNAME}>\n        <Heading>Quotes</Heading>\n      </Column>\n    }\n  >\n    <Column className={COLUMN_CLASSNAME}>\n      <QuotesList quotes={data.allMarkdownRemark.nodes} />\n    </Column>\n  </Page>\n);\n\nexport const query = graphql`\n  {\n    allMarkdownRemark {\n      nodes {\n        # TODO: Refactor in GraphQL fragment.\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n        image {\n          childImageSharp {\n            # The maximum width at which a quote image may be rendered occurs\n            # when quote list has just been collapsed at 768px and the image\n            # appears scretched as a background across the quote text.\n            fluid(maxWidth: 768) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        placeholder {\n          patternFile {\n            publicURL\n          }\n          foregroundColor\n          backgroundColor\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotes\":\"quotes-list-module--quotes--3anyO\",\"image\":\"quotes-list-module--image--2vGeJ\",\"text\":\"quotes-list-module--text---yJ4c\",\"share\":\"quotes-list-module--share--J_JBZ\"};","import React from 'react';\nimport classNames from 'classnames';\nimport { MdShare } from 'react-icons/md';\n\nimport { useAbsoluteUrl } from '../utils/misc';\nimport styles from '../styles/share-button.module.css';\n\nexport default ({ shareUrl, className, style }) => {\n  const absoluteShareUrl = useAbsoluteUrl(shareUrl);\n\n  return (\n    <button\n      className={classNames('btn btn-link', styles.button, className)}\n      onClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        window.open(\n          'https://www.facebook.com/sharer/sharer.php?u=' +\n            window.encodeURIComponent(absoluteShareUrl),\n          'pop',\n          'width=600, height=400, scrollbars=no',\n        );\n      }}\n      style={style}\n    >\n      <MdShare size=\"24px\" />\n    </button>\n  );\n};\n","import React from 'react';\nimport Img from 'gatsby-image';\n\nexport default ({ quote, onLoad }) => (\n  quote.image ? (\n    <Img\n      className=\"h-100\"\n      onLoad={onLoad}\n      {...quote.image.childImageSharp}\n    />\n  ) : (\n    // If quote does not have image, render a placeholder, consisting of a\n    // background solid color and foreground translucent pattern overlay.\n    <div\n      className=\"h-100\"\n      style={{\n        background: quote.placeholder.backgroundColor,\n      }}\n    >\n      <div\n        className=\"w-100 h-100\"\n        style={{\n          backgroundImage:\n            `url(${quote.placeholder.patternFile.publicURL})`,\n          backgroundRepeat: 'repeat',\n          backgroundSize: '160px',\n          opacity: 0.1,\n        }}\n      />\n    </div>\n  )\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"share-button-module--button--_xlUs\"};","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport QuoteImage from './quote-image';\nimport ShareButton from './share-button';\nimport styles from '../styles/quotes-list.module.css';\n\nexport default ({ quotes }) => (\n  <div className={styles.quotes}>\n    {quotes.map(quote =>\n      <Link\n        key={quote.fields.slug}\n        to={quote.fields.slug}\n      >\n        <div className={styles.image}>\n          <QuoteImage quote={quote} />\n        </div>\n        <div className={styles.text}>\n          <span>\n            {quote.excerpt}\n          </span>\n        </div>\n        <ShareButton\n          shareUrl={quote.fields.slug}\n          className={styles.share}\n        />\n      </Link>\n    )}\n  </div>\n);\n"],"sourceRoot":""}